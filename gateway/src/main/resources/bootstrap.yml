server:
  port: 8200

spring:
  application:
    name: hishop-gateway
  profiles:
    active: dev
  cloud:
    config:
      uri: http://140.143.158.164:8000/
      label: master
      profile: dev
      name: ${spring.application.name},common,redis

# 监控配置
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
        #exclude: beans #不暴露beans端点

#Zuul默认集成hystrix, 同时,和hystrix一样采用线程隔离技术
#zuul默认使用:信号量(semaphore)
#hystrix默认使用:线程池 (thread)
zuul:
  #路由配置
  routes:
    hishop-aggregation: /api/aggregation/**
    hishop-goods: /api/goods/**
    hishop-order: /api/order/**
    hishop-user: /api/user/**
    hishop-management: /api/management/**
  ignored-patterns: /hishop-*/** #统一入口为上面的配置，其他入口忽略
  #ignored-services: hishop-order #忽略整个服务，对外提供接口

  #配置zuul隔离策略，信号量semaphore(默认)/线程thread
  ribbon-isolation-strategy: semaphore
  semaphore:
    max-semaphores: 100 #信号量大小 默认100 #could not acquire a semaphore for execution and no fallback available https://github.com/spring-cloud/spring-cloud-netflix/issues/2064

  #需要配置host和ribbon的超时时间，否则会异常Hystrix Readed time out（SendErrorFilter类的80行）https://my.oschina.net/zhongwenhao/blog/3089219
  host:
    connect-timeout-millis: 20000
    socket-timeout-millis: 20000

#设置ribbon的超时时间需要小于zuul的超时时间
ribbon:
  ReadTimeout: 10000
  ConnectTimeout: 10000

hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE
          semaphore:
            maxConcurrentRequests: 100
          #thread:
            #timeoutInMilliseconds: 20000 #hystrix超时时间，默认1秒
        timeout:
          enabled: false #hystrix从不超时
      circuitBreaker:
        sleepWindowInMilliseconds:  5000

      fallback:
        isolation:
          strategy: semaphore #配置断路器中的隔离策略为信号量
          semaphore:
            maxConcurrentRequests: 100  #配置断路器中的信号量大小，默认10，太小了再并发较高的情况下会报 HystrixRuntimeException:fallback execution rejected
  threadpool:
    default:
      coreSize: 100 #并发执行的最大线程数，默认10，并发大于10时，请求线程会报错：java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@460d14a1 rejected from java.util.concurrent.ThreadPoolExecutor@3876c0f2[Running, pool size = 4, active threads = 4, queued tasks = 0, completed tasks = 0]
      maxQueuedSize: 1000 #BlockingQueue的最大队列数，默认-1
      queueSizeRejectionThreshold: 1000 #即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝，默认值5

